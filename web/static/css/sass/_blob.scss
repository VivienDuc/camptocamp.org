// following comment will be appended on top of each generated file
/* !! Do not edit this file, it is generated by sass !! */

// Support for mozilla in experimental css3 properties
$experimental-support-for-mozilla : true !default;
// Support for webkit in experimental css3 properties
$experimental-support-for-webkit : true !default;
// Support for opera in experimental css3 properties
$experimental-support-for-opera : true !default;
// Support for microsoft in experimental css3 properties
$experimental-support-for-microsoft : true !default;

// This mixin provides basic support for CSS3 properties and
// their corresponding experimental CSS2 properties when
// the implementations are identical except for the property
// prefix.
@mixin experimental($property, $value,
  $moz : $experimental-support-for-mozilla,
  $webkit : $experimental-support-for-webkit,
  $o : $experimental-support-for-opera,
  $ms : $experimental-support-for-microsoft,
  $official : true
) {
  @if $moz and $experimental-support-for-mozilla { -moz-#{$property} : $value; }
  @if $webkit and $experimental-support-for-webkit { -webkit-#{$property} : $value; }
  @if $o and $experimental-support-for-opera { -o-#{$property} : $value; }
  @if $ms and $experimental-support-for-microsoft { -ms-#{$property} : $value; }
  @if $official { #{$property} : $value; }
}

// Same as experimental(), but for cases when the property is the same and the value is vendorized
@mixin experimental-value($property, $value,
  $moz : $experimental-support-for-mozilla,
  $webkit : $experimental-support-for-webkit,
  $o : $experimental-support-for-opera,
  $ms : $experimental-support-for-microsoft,
  $official : true
) {
  @if $moz and $experimental-support-for-mozilla { #{$property} : -moz-#{$value}; }
  @if $webkit and $experimental-support-for-webkit { #{$property} : -webkit-#{$value}; }
  @if $o and $experimental-support-for-opera { #{$property} : -o-#{$value}; }
  @if $ms and $experimental-support-for-microsoft { #{$property} : -ms-#{$value}; }
  @if $khtml and $experimental-support-for-khtml { #{$property} : -khtml-#{$value}; }
  @if $official { #{$property} : #{$value}; }
}

// border radius

$default-border-radius: 5px !default;

// Round all corners by a specific amount, defaults to value of `$default-border-radius`.
//
// When two values are passed, the first is the horizontal radius
// and the second is the vertical radius.
//
// Note: webkit does not support shorthand syntax for several corners at once.
// So in the case where you pass several values only the first will be passed to webkit.
// Also, we don't use -o or -ms prefixes, since it is not needed
//
// Examples:
//
// .simple { @include border-radius(4px, 4px); }
// .compound { @include border-radius(2px 5px, 3px 6px); }
// .crazy { @include border-radius(1px 3px 5px 7px, 2px 4px 6px 8px)}
//
// Which generates:
// .simple {
// -webkit-border-radius: 4px 4px;
// -moz-border-radius: 4px / 4px;
// -o-border-radius: 4px / 4px;
// -ms-border-radius: 4px / 4px;
// border-radius: 4px / 4px; }
//
// .compound {
// -webkit-border-radius: 2px 3px;
// -moz-border-radius: 2px 5px / 3px 6px;
// -o-border-radius: 2px 5px / 3px 6px;
// -ms-border-radius: 2px 5px / 3px 6px;
// border-radius: 2px 5px / 3px 6px; }
//
// .crazy {
// -webkit-border-radius: 1px 2px;
// -moz-border-radius: 1px 3px 5px 7px / 2px 4px 6px 8px;
// -o-border-radius: 1px 3px 5px 7px / 2px 4px 6px 8px;
// -ms-border-radius: 1px 3px 5px 7px / 2px 4px 6px 8px;
// border-radius: 1px 3px 5px 7px / 2px 4px 6px 8px; }
@mixin border-radius($radius: $default-border-radius, $vertical-radius: false) {

  @if $vertical-radius {
    // Webkit doesn't understand the official shorthand syntax for specifying
    // a vertical radius unless so in case there's several we only take the first.
    @include experimental(border-radius, first-value-of($radius) first-value-of($vertical-radius),
      not -moz,
      -webkit,
      not -o,
      not -ms,
      not official
    );
    @include experimental("border-radius", $radius unquote("/") $vertical-radius,
      -moz,
      not -webkit,
      not -o,
      not -ms,
      official
    );
  }
  @else {
    @include experimental(border-radius, $radius,
      -moz,
      -webkit,
      not -o,
      not -ms,
      official
    );
  }
}

// Round radius at position by amount.
//
// * legal values for `$vert`: `top`, `bottom`
// * legal values for `$horz`: `left`, `right`
@mixin border-corner-radius($vert, $horz, $radius: $default-border-radius) {
  // Support for mozilla's syntax for specifying a corner
  @include experimental("border-radius-#{$vert}#{$horz}", $radius,
    -moz,
    not -webkit,
    not -o,
    not -ms,
    not official
  );
  @include experimental("border-#{$vert}-#{$horz}-radius", $radius,
    not -moz,
    -webkit,
    not -o,
    not -ms,
    official
  );
}

// Round top-left corner only
@mixin border-top-left-radius($radius: $default-border-radius) {
  @include border-corner-radius(top, left, $radius);
}

// Round top-right corner only
@mixin border-top-right-radius($radius: $default-border-radius) {
  @include border-corner-radius(top, right, $radius);
}

// Round bottom-left corner only
@mixin border-bottom-left-radius($radius: $default-border-radius) {
  @include border-corner-radius(bottom, left, $radius); }

// Round bottom-right corner only
@mixin border-bottom-right-radius($radius: $default-border-radius) {
  @include border-corner-radius(bottom, right, $radius);
}

// Round both top corners by amount
@mixin border-top-radius($radius: $default-border-radius) {
  @include border-top-left-radius($radius);
  @include border-top-right-radius($radius);
}

// Round both right corners by amount
@mixin border-right-radius($radius: $default-border-radius) {
  @include border-top-right-radius($radius);
  @include border-bottom-right-radius($radius);
}

// Round both bottom corners by amount
@mixin border-bottom-radius($radius: $default-border-radius) {
  @include border-bottom-left-radius($radius);
  @include border-bottom-right-radius($radius);
}

// Round both left corners by amount
@mixin border-left-radius($radius: $default-border-radius) {
  @include border-top-left-radius($radius);
  @include border-bottom-left-radius($radius);
}
