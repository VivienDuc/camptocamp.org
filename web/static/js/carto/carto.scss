@import "blob";

.tooltip_tooltip {
  background-color: white;
  color: black;
  padding: 2px;
  @include opacity(.8);
}

// c2c layers icons
.x-tree-node-el .x-tree-node-icon {
  height: 16px;
  width: 16px;
  padding: 0 2px;
}

// osm attribution is too high on the map
// restore value from web/static/js/carto/cgxp/core/src/theme/all.css
.olControlAttribution {
  bottom: .5em;
}

// google logo conflicts with the scaleline
// we move it up a bit
img[src*='google_white'] {
  top: -20px !important
}

// we don't want the bad-looking black background for the scaleline
div.olControlScaleLine {
  background-color: transparent;
  padding-left: 2px;
  padding-bottom: 2px;
}

// layer switcher has disgracious white background
.opacityToolbar {
  border: none !important;
  background-color: transparent;
}

// compensate rounded inputs for maps
input[type=text].x-form-field {
  @include border-radius(0);
}

#map_container p.default_text
{
  padding-top: 0.7em;
}

// pictos for layertree that are not indcluded in base css
// note that !important is only needed for the treelayer from maps (css specificty)
// TODO maybe we can do something better...
$pictos: pass, lake, crag, parking_green, gite, camp;
@each $picto in $pictos {
  .picto_#{$picto} {
    @include -c2c-datauri-background('/static/images/picto/#{$picto}.png', no-repeat 0 !important);
  }
}
.picto_blank {
  @include -c2c-datauri-background('/static/js/carto/cgxp/ext/Ext/resources/images/default/s.gif', no-repeat 0 !important);
}

// Heareafter we include some picto as datauri, so that the borwser doesn't download them
// (seems to work at least in FF and Chrome)
.x-tree-node-expanded .x-tree-node-icon { // expanded folder in layer tree
  background-image: url(-c2c-datauri('/static/js/carto/cgxp/ext/Ext/resources/images/default/tree/folder-open.gif'));
}

.x-tree-node-collapsed .x-tree-node-icon { // collapsed folder in layer tree
  background-image: url(-c2c-datauri('/static/js/carto/cgxp/ext/Ext/resources/images/default/tree/folder.gif'));
}
.x-tree-arrows { // arrows in layer tree
  .x-tree-elbow-end-minus, .x-tree-elbow-end-plus,
  .x-tree-elbow-minus, .x-tree-elbow-plus {
    background-image: url(-c2c-datauri('/static/js/carto/cgxp/ext/Ext/resources/images/gray/tree/arrows.gif')); 
  }
}
.x-form-field-wrap .x-form-trigger { // layer switcher
  background-image: url(-c2c-datauri('/static/js/carto/cgxp/ext/Ext/resources/images/gray/form/trigger.gif'));
}
.x-toolbar { // Toolbar icons
  .gxp-icon-zoom-in {
    background-image: url(-c2c-datauri('/static/js/carto/cgxp/gxp/src/theme/img/silk/magnifier_zoom_in.png'));
  }
  .gxp-icon-zoom-out {
    background-image: url(-c2c-datauri('/static/js/carto/cgxp/gxp/src/theme/img/silk/magnifier_zoom_out.png'));
  }
  .gxp-icon-zoom-previous {
    background-image: url(-c2c-datauri('/static/js/carto/cgxp/gxp/src/theme/img/silk/arrow_left.png'));
  }
  .gxp-icon-zoom-next {
    background-image: url(-c2c-datauri('/static/js/carto/cgxp/gxp/src/theme/img/silk/arrow_right.png'));
  }
  .permalink {
    background-image: url(-c2c-datauri('/static/js/carto/cgxp/core/src/theme/img/permalink.png'));
  }
  .help {
    background-image: url(-c2c-datauri('/static/js/carto/cgxp/core/src/theme/img/help.png'));
  }
}
.x-btn, .x-menu-item { // measure tool
  .cgxp-icon-measure-length {
    background-image: url(-c2c-datauri('/static/js/carto/cgxp/core/src/theme/img/ruler.png'));
  }
  .cgxp-icon-measure-point {
    background-image: url(-c2c-datauri('/static/js/carto/cgxp/core/src/theme/img/bullet_orange.png'));
  }
  .cgxp-icon-measure-area {
    background-image: url(-c2c-datauri('/static/js/carto/cgxp/core/src/theme/img/ruler_square.png'));
  }
  .cgxp-icon-measure-azimuth {
    background-image: url(-c2c-datauri('/static/js/carto/cgxp/core/src/theme/img/ruler_triangle.png'));
  }
}
